// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Product {
  id          String    @id @default(uuid())
  name        String
  description String
  price       Float
  images      String[]  // Array von Bild-URLs
  features    String[]  // Array von Features/Eigenschaften
  isPopular   Boolean   @default(false)
  isPremium   Boolean   @default(false)
  featured    Boolean   @default(false)
  category    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  orderItems  OrderItem[]
}

model Order {
  id            String      @id @default(uuid())
  userId        String?     // Optional gemacht, da Gastbestellungen möglich sind
  user          User?       @relation(fields: [userId], references: [id])
  customerName  String      // Hinzugefügt für Gastbestellungen
  customerEmail String      // Hinzugefügt für Gastbestellungen
  totalAmount   Float
  status        OrderStatus @default(PENDING)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  items         OrderItem[]
  stripeId      String?     @unique
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELLED
} 